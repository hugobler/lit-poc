{"version":3,"file":"dropdown.js","sourceRoot":"","sources":["src/dropdown.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAS7B,MAAM;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE/B,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,YAAY;YACnB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAA,WAAW,CAAC,WAAW,CAAC;;KAE5D,CAAC;IACJ,CAAC;CACF,CAAA;AAZC;IANC,QAAQ,CAAC;QACR,SAAS,EAAE,CAAC,SAAwB,EAAE,EAAE;YACtC,IAAI,SAAS;gBAAE,OAAO,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;gBACvD,OAAO,SAAS,CAAC;QACxB,CAAC;KACF,CAAC;8CACsB;AAPb,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAmBpB;SAnBY,QAAQ","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('drop-down')\nexport class Dropdown extends LitElement {\n  @property({\n    converter: (attrValue: string | null) => {\n      if (attrValue) return attrValue.replace(' ', '').split(',');\n      else return undefined;\n    },\n  })\n  optionsArray?: string[];\n\n  override render() {\n    console.log(this.optionsArray);\n\n    return html`\n      <select>\n        ${this.optionsArray &&\n        this.optionsArray.map((o) => html`<option>${o}</option>`)}\n      </select>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'drop-down': Dropdown;\n  }\n}\n"]}